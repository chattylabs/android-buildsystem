// Common android gradle configuration
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "0.1"

        // Enable this option on your own gradle file if you need it
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        checkAllWarnings false
        checkReleaseBuilds false
        //Some libraries have issues with this.
        disable 'InvalidPackage'
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        //disable 'IconDensities'
        //For testing purpose. This is safe to remove.
        //disable 'IconMissingDensityFolder'
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled = false
            signingConfig signingConfigs.debug
        }
    }

    testOptions {

        // Enable this option on your own gradle file if you need it
        //unitTests.returnDefaultValues = true

        // Always show the result of every unit test, even if it passes.
        unitTests {
            // Robolectric
            includeAndroidResources = true
            // Tests
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                    outputs.upToDateWhen { false }
                    showStandardStreams = true
                }
            }
        }
    }
}

if (kotlin_version == null) throw new NullPointerException("Please define \$kotlin_version " +
        "in your root gradle file")

dependencies {
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

/*
 * Option to configure to disable Dex and Images Cruncher on CI
 *
 * Usage: ./gradlew build -PisCi=true
 */
project.ext.enableOption = project.hasProperty("isCi") ? !project.isCi : true

project.plugins.whenPluginAdded { plugin ->
    if ("com.android.build.gradle.AppPlugin" == plugin.class.name ||
        "com.android.build.gradle.LibraryPlugin" == plugin.class.name) {
        project.android.dexOptions.preDexLibraries = rootProject.ext.enableOption
        project.android.aaptOptions.cruncherEnabled = rootProject.ext.enableOption
    }
}

/*
 * Avoid Javadoc to fail and to stop generating sources
 */
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        excludes = ['**/*.kt']
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}